<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.molgenis</groupId>
  <artifactId>molgenis</artifactId>
  <version>9.0.0-SNAPSHOT</version>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.7.RELEASE</version>
  </parent>
  <packaging>pom</packaging>

  <!-- More Project Information -->
  <name>MOLGENIS</name>
  <description>
    MOLGENIS is a collaborative open source project on a mission to generate great software
    infrastructure for life
    science research
  </description>
  <url>http://www.molgenis.org</url>
  <licenses>
    <license>
      <name>GNU Library or Lesser General License (LGPL)</name>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:https://github.com/molgenis/molgenis.git</connection>
    <developerConnection>scm:git:https://github.com/molgenis/molgenis.git</developerConnection>
    <url>https://github.com/molgenis/molgenis</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <name>MOLGENIS development team</name>
      <email>molgenis@gmail.com</email>
      <organization>University Medical Centre Groningen, System Genetics, Genomics Coordination
        Centre
      </organization>
      <organizationUrl>http://www.molgenis.org</organizationUrl>
    </developer>
  </developers>

  <properties>
    <java.version>11</java.version>
    <graalvm.version>20.2.0</graalvm.version>

    <!-- authentication for release scm plugin -->
    <project.scm.id>github</project.scm.id>

    <!-- maven properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm z</maven.build.timestamp.format>

    <!-- molgenis specific properties -->
    <molgenis.build.timestamp>${maven.build.timestamp}</molgenis.build.timestamp>

    <!-- artifact publish properties -->
    <registry.id>registry.molgenis.org</registry.id>
    <!-- don't publish module jars -->
    <maven.deploy.skip>true</maven.deploy.skip>

    <!-- code quality monitoring properties -->
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.organization>molgenis</sonar.organization>
    <sonar.github.repository>molgenis/molgenis</sonar.github.repository>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>

    <!-- skip stuff -->
    <isPullRequest>true</isPullRequest>
    <maven.test.skip>false</maven.test.skip>
    <skipTests>${maven.test.skip}</skipTests>
    <skipITs>${skipTests}</skipITs>
    <skipUTs>${skipTests}</skipUTs>
    <jacoco.skip>${skipTests}</jacoco.skip>
    <enforcer.skip>${skipTests}</enforcer.skip>
    <checkstyle.skip>${skipTests}</checkstyle.skip>
    <fmt.skip>${skipTests}</fmt.skip>
    <reproducible.skip>${skipTests}</reproducible.skip>
    <swagger.skip>${skipTests}</swagger.skip>
    <maven.javadoc.skip>${skipTests}</maven.javadoc.skip>
    <sonar.skip>${skipTests}</sonar.skip>

    <!-- override dependency versions managed by parent pom -->
    <elasticsearch.version>5.5.3</elasticsearch.version>
    <guava.version>30.1-jre</guava.version>
    <!-- parent version 0.35 depends on org.apache.commons:commons-compress:jar:1.9, 1.18 is required by org.apache.poi:poi:jar:4.0.1 -->
    <webjars-locator-core.version>0.36</webjars-locator-core.version>
    <!-- Java 11 support -->
    <rest-assured.version>3.3.0</rest-assured.version>

    <!-- dependency versions not managed by parent pom -->
    <google.auto-value.version>1.7</google.auto-value.version>
    <apache.rdf4j.version>3.4.1</apache.rdf4j.version>
    <google-api-client.version>1.21.0</google-api-client.version>
    <aerogear-otp-java.version>1.0.0</aerogear-otp-java.version>
    <aws-java-sdk-s3.version>1.11.86</aws-java-sdk-s3.version>
    <swagger-annotations.version>1.5.16</swagger-annotations.version>
    <org.everit.json.schema.version>1.5.1</org.everit.json.schema.version>
    <picard.version>1.102.0</picard.version>
    <json.version>20141113</json.version>
    <rsql-parser.version>2.0.0</rsql-parser.version>
    <UserAgentUtils.version>1.17</UserAgentUtils.version>
    <freemarker-java8.version>1.1.2</freemarker-java8.version>
    <mapdb.version>1.0.6</mapdb.version>
    <simplecaptcha.version>1.2.2</simplecaptcha.version>
    <zip4j.version>1.3.2</zip4j.version>
    <handlebars.version>4.1.0</handlebars.version>
    <poi-ooxml-schemas.version>4.0.1</poi-ooxml-schemas.version>
    <gson-extras.version>0.2.1</gson-extras.version>
    <findbugs-jsr305.version>3.0.2</findbugs-jsr305.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-fileupload.version>1.3.3</commons-fileupload.version>
    <poi.version>4.0.1</poi.version>
    <jaxb-api.version>2.2.11</jaxb-api.version>
    <vcf-io.version>1.0.3</vcf-io.version>
    <minio.version>6.0.2</minio.version>
    <ph-javacc-maven-plugin.version>4.1.3</ph-javacc-maven-plugin.version>

    <!-- test-dependency versions not managed by parent pom -->
    <jsonpath.version>2.4.0</jsonpath.version>
    <awaitility.version>3.0.0</awaitility.version>
    <greenmail-webapp.version>1.5.5</greenmail-webapp.version>

    <!-- plugin versions not managed by parent pom -->
    <swagger-maven-plugin.version>3.1.5</swagger-maven-plugin.version>
    <jaxb2-maven-plugin.version>1.5</jaxb2-maven-plugin.version>
    <jaxws-maven-plugin.version>2.1</jaxws-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
    <minify-maven-plugin.version>1.7.6</minify-maven-plugin.version>
    <extra-enforcer-rules.version>1.0-beta-6</extra-enforcer-rules.version>
    <jsdoc3-maven-plugin.version>1.1.0</jsdoc3-maven-plugin.version>
    <release-maven-plugin.version>2.5.3</release-maven-plugin.version>
    <reproducible-build-maven-plugin.version>0.10</reproducible-build-maven-plugin.version>

    <!-- Integration test properties -->
    <cargo-plugin.version>1.7.7</cargo-plugin.version>
    <sql-maven-plugin.version>1.5</sql-maven-plugin.version>
    <elasticsearch-maven-plugin.version>5.7</elasticsearch-maven-plugin.version>
    <!-- if profiles are inactive, set these props to use local infrastructure -->
    <it_db_name>molgenis_test</it_db_name>
    <it_db_user>postgres</it_db_user>
    <it_db_password>postgres</it_db_password>
    <it_db_port>5432</it_db_port>
    <elasticsearch.transport.addresses>localhost:9300</elasticsearch.transport.addresses>
    <elasticsearch.cluster.name>molgenis</elasticsearch.cluster.name>
    <zt-zip.version>1.13</zt-zip.version>
    <fmt-maven-plugin.version>2.9</fmt-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
    <checkstyle.version>8.29</checkstyle.version>
    <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
    <sentry.version>1.7.5</sentry.version>
    <sentry-logback.version>1.7.14</sentry-logback.version>
  </properties>

  <distributionManagement>
    <snapshotRepository>
      <id>${registry.id}</id>
      <url>https://registry.molgenis.org/repository/maven-snapshots</url>
    </snapshotRepository>
    <repository>
      <id>${registry.id}</id>
      <url>https://registry.molgenis.org/repository/maven-releases</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>molgenis-nexus</id>
      <name>Maven public group on registry.molgenis.org</name>
      <url>https://registry.molgenis.org/repository/maven-public</url>
    </repository>
  </repositories>

  <build>
    <!-- include *.ftl in src folder -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.ftl</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**molgenis.properties</exclude>
          <exclude>**git.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <configLocation>molgenis_checks.xml</configLocation>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>-Xlint:all,-deprecation</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>com.google.auto.value</groupId>
                <artifactId>auto-value</artifactId>
                <version>${google.auto-value.version}</version>
              </path>
              <!-- workaround for https://stackoverflow.com/questions/58671279/maven-project-build-fails-in-intellij-when-annotation-processors-are-used-googl -->
              <path>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>1.0-rc6</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>
                  true
                </addDefaultImplementationEntries>
              </manifest>
            </archive>
            <excludes>
              <exclude>**/logback-test.xml</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <executions>
            <!-- copy generated resources to target folder -->
            <execution>
              <id>copy-generated-resources</id>
              <phase>process-classes</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                <resources>
                  <resource>
                    <directory>target/generated-resources</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <doclint>none</doclint>
            <additionalOptions>--allow-script-in-comments</additionalOptions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.kongchen</groupId>
          <artifactId>swagger-maven-plugin</artifactId>
          <version>${swagger-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jaxb2-maven-plugin</artifactId>
          <version>${jaxb2-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jvnet.jax-ws-commons</groupId>
          <artifactId>jaxws-maven-plugin</artifactId>
          <version>${jaxws-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <skip>${skipUTs}</skip>
            <argLine>@{argLine} --illegal-access=permit</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>reserve-network-port</id>
              <goals>
                <goal>reserve-network-port</goal>
              </goals>
              <!-- disabled by default unless child pom binds it to existing phase -->
              <phase>none</phase>
              <configuration>
                <portNames>
                  <portName>elasticsearch.tcp.port</portName>
                  <portName>elasticsearch.http.port</portName>
                </portNames>
                <randomPort>true</randomPort>
              </configuration>
            </execution>
            <execution>
              <id>minify-build-helper</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>add-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>target/generated-resources</directory>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <!-- add sources created by Google AutoValue -->
            <execution>
              <id>execution-annotations</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>target/generated-sources/annotations</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${properties-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <configuration>
            <argLine>${failsafe.argLine}</argLine>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- SQL plugin -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sql-maven-plugin</artifactId>
          <version>${sql-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>${postgresql.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <driver>org.postgresql.Driver</driver>
            <url>jdbc:postgresql://localhost:${it_db_port}/</url>
            <username>${it_db_user}</username>
            <password>${it_db_password}</password>
            <forceMojoExecution>true</forceMojoExecution>
            <onError>continue</onError>
            <autocommit>true</autocommit>
            <skip>${skipTests}</skip>
          </configuration>
          <executions>
            <execution>
              <id>create postgres integration database</id>
              <goals>
                <goal>execute</goal>
              </goals>
              <!-- skip by default unless child pom binds it to existing phase -->
              <phase>none</phase>
              <configuration>
                <sqlCommand>CREATE DATABASE ${it_db_name};</sqlCommand>
              </configuration>
            </execution>
            <execution>
              <id>drop postgres integration database</id>
              <goals>
                <goal>execute</goal>
              </goals>
              <!-- skip by default unless child pom binds it to existing phase -->
              <phase>none</phase>
              <configuration>
                <sqlCommand>DROP DATABASE ${it_db_name};</sqlCommand>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Elasticsearch plugin start and stop elasticsearch instance -->
        <plugin>
          <groupId>com.github.alexcojocaru</groupId>
          <artifactId>elasticsearch-maven-plugin</artifactId>
          <version>${elasticsearch-maven-plugin.version}</version>
          <configuration>
            <version>${elasticsearch.version}</version>
            <clusterName>${elasticsearch.cluster.name}</clusterName>
            <pathConf>${project.build.directory}/test-classes/conf/elasticsearch</pathConf>
            <transportPort>${elasticsearch.tcp.port}</transportPort>
            <httpPort>${elasticsearch.http.port}</httpPort>
            <!-- on build server, concurrent launches are slow to start -->
            <timeout>120</timeout>
            <skip>${skipTests}</skip>
          </configuration>
          <executions>
            <execution>
              <id>start-elasticsearch</id>
              <phase>none</phase>
              <goals>
                <goal>runforked</goal>
              </goals>
            </execution>
            <execution>
              <id>stop-elasticsearch</id>
              <phase>none</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Cargo plugin stops and starts Tomcat -->
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>${cargo-plugin.version}</version>
          <configuration>
            <skip>${skipTests}</skip>
          </configuration>
        </plugin>
        <!-- minify css/js -->
        <plugin>
          <groupId>com.samaxes.maven</groupId>
          <artifactId>minify-maven-plugin</artifactId>
          <version>${minify-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>default-minify</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>minify</goal>
              </goals>
              <configuration>
                <charset>UTF-8</charset>
                <webappSourceDir>${project.basedir}/src/main/resources</webappSourceDir>
                <webappTargetDir>${project.build.directory}/generated-resources</webappTargetDir>
                <cssSourceIncludes>
                  <cssSourceInclude>**/*.css</cssSourceInclude>
                  <cssSourceInclude>**/**/*.css</cssSourceInclude>
                </cssSourceIncludes>
                <cssSourceExcludes>
                  <!-- changes to excludes must be applied to molgenis-core-ui/src/main/resources/templates/resource-macros.ftl -->
                  <cssSourceExclude>**/*.min.css</cssSourceExclude>
                  <cssSourceExclude>**/*-min.css</cssSourceExclude>
                  <cssSourceExclude>**/**/*.min.css</cssSourceExclude>
                  <cssSourceExclude>**/**/*-min.css</cssSourceExclude>
                </cssSourceExcludes>
                <jsSourceIncludes>
                  <jsSourceInclude>**/*.js</jsSourceInclude>
                </jsSourceIncludes>
                <jsSourceExcludes>
                  <!-- changes to excludes must be applied to molgenis-core-ui/src/main/resources/templates/resource-macros.ftl -->
                  <jsSourceExclude>**/*.min.js</jsSourceExclude>
                  <cssSourceExclude>**/*-min.js</cssSourceExclude>
                  <jsSourceExclude>**/src-min-noconflict/**</jsSourceExclude>
                </jsSourceExcludes>
                <nosuffix>false</nosuffix>
                <skipMerge>true</skipMerge>
                <skipMinify>false</skipMinify>
                <!-- setting verbose to true will to output js warnings -->
                <verbose>false</verbose>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${release-maven-plugin.version}</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <scmCommentPrefix>[ci skip] [maven-release-plugin]${line.separator}</scmCommentPrefix>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.helger.maven</groupId>
          <artifactId>ph-javacc-maven-plugin</artifactId>
          <version>${ph-javacc-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${fmt-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.zlika</groupId>
        <artifactId>reproducible-build-maven-plugin</artifactId>
        <version>${reproducible-build-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>strip-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging:commons-logging</exclude>
                    <!-- Because Zipflip -->
                    <exclude>net.lingala.zip4j:zip4j</exclude>
                    <exclude>org.apache.logging.log4j:log4j</exclude>
                    <!-- Use spring-jcl as logging bridge -->
                    <exclude>org.slf4j:jcl-over-slf4j</exclude>
                    <exclude>com.google.guava:guava-jdk5</exclude>
                    <!-- As of Java 1.6 StAX is part of the standard API -->
                    <exclude>javax.xml.stream:stax-api</exclude>
                    <exclude>stax:stax-api</exclude>
                  </excludes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>${extra-enforcer-rules.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- add minified resources to build path -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>minify-build-helper</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>target/jacoco-it.exec</destFile>
              <propertyName>failsafe.argLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>target/jacoco-it.exec</dataFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <!-- improve report generation performance -->
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.j2objc</groupId>
            <artifactId>j2objc-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-compat-qual</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>guava</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.auto.value</groupId>
        <artifactId>auto-value-annotations</artifactId>
        <version>${google.auto-value.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>transport</artifactId>
        <version>${elasticsearch.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.api-client</groupId>
        <artifactId>google-api-client</artifactId>
        <version>${google-api-client.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava-jdk5</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jboss.aerogear</groupId>
        <artifactId>aerogear-otp-java</artifactId>
        <version>${aerogear-otp-java.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>${aws-java-sdk-s3.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.everit.json</groupId>
        <artifactId>org.everit.json.schema</artifactId>
        <version>${org.everit.json.schema.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.utgenome.thirdparty</groupId>
        <artifactId>picard</artifactId>
        <version>${picard.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${json.version}</version>
      </dependency>
      <dependency>
        <groupId>org.molgenis</groupId>
        <artifactId>vcf-io</artifactId>
        <version>${vcf-io.version}</version>
      </dependency>
      <dependency>
        <groupId>com.icegreen</groupId>
        <artifactId>greenmail-webapp</artifactId>
        <version>${greenmail-webapp.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.eclipse.rdf4j</groupId>
        <artifactId>rdf4j-rio-turtle</artifactId>
        <version>${apache.rdf4j.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.eclipse.rdf4j</groupId>
        <artifactId>rdf4j-model</artifactId>
        <version>${apache.rdf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>no.api.freemarker</groupId>
        <artifactId>freemarker-java8</artifactId>
        <version>${freemarker-java8.version}</version>
      </dependency>
      <dependency>
        <groupId>cz.jirutka.rsql</groupId>
        <artifactId>rsql-parser</artifactId>
        <version>${rsql-parser.version}</version>
      </dependency>
      <dependency>
        <groupId>eu.bitwalker</groupId>
        <artifactId>UserAgentUtils</artifactId>
        <version>${UserAgentUtils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapdb</groupId>
        <artifactId>mapdb</artifactId>
        <version>${mapdb.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.apiclub.tool</groupId>
        <artifactId>simplecaptcha</artifactId>
        <version>${simplecaptcha.version}</version>
      </dependency>
      <dependency>
        <groupId>net.lingala.zip4j</groupId>
        <artifactId>zip4j</artifactId>
        <version>${zip4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-zip</artifactId>
        <version>${zt-zip.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.jknack</groupId>
        <artifactId>handlebars</artifactId>
        <version>${handlebars.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sentry</groupId>
        <artifactId>sentry</artifactId>
        <version>${sentry.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sentry</groupId>
        <artifactId>sentry-logback</artifactId>
        <version>${sentry-logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml-schemas</artifactId>
        <version>${poi-ooxml-schemas.version}</version>
      </dependency>
      <dependency>
        <groupId>org.danilopianini</groupId>
        <artifactId>gson-extras</artifactId>
        <version>${gson-extras.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${findbugs-jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb-api.version}</version>
      </dependency>
      <dependency>
        <groupId>io.minio</groupId>
        <artifactId>minio</artifactId>
        <version>${minio.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>
    <dependency>
      <!-- needed for genotype IO, it is compiled against log4j 1.x api -->
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
  </dependencies>

  <modules>
    <module>molgenis-amazon-bucket</module>
    <module>molgenis-api</module>
    <module>molgenis-api-permissions</module>
    <module>molgenis-api-data</module>
    <module>molgenis-api-fair</module>
    <module>molgenis-api-files</module>
    <module>molgenis-api-identities</module>
    <module>molgenis-api-metadata</module>
    <module>molgenis-api-metrics</module>
    <module>molgenis-api-tests</module>
    <module>molgenis-app</module>
    <module>molgenis-app-manager</module>
    <module>molgenis-audit</module>
    <module>molgenis-bootstrap</module>
    <module>molgenis-core-ui</module>
    <module>molgenis-core</module>
    <module>molgenis-data-cache</module>
    <module>molgenis-data-csv</module>
    <module>molgenis-data-elasticsearch</module>
    <module>molgenis-data-excel</module>
    <module>molgenis-data-file</module>
    <module>molgenis-data-i18n</module>
    <module>molgenis-data-icd10</module>
    <module>molgenis-data-import</module>
    <module>molgenis-data-index</module>
    <module>molgenis-data-migrate</module>
    <module>molgenis-data-platform</module>
    <module>molgenis-data-plugin</module>
    <module>molgenis-data-postgresql</module>
    <module>molgenis-data-row-edit</module>
    <module>molgenis-data-security</module>
    <module>molgenis-data-validation</module>
    <module>molgenis-data-vcf</module>
    <module>molgenis-data</module>
    <module>molgenis-dataexplorer</module>
    <module>molgenis-file-ingester</module>
    <module>molgenis-genomebrowser</module>
    <module>molgenis-jobs</module>
    <module>molgenis-js</module>
    <module>molgenis-metadata-manager</module>
    <module>molgenis-metrics</module>
    <module>molgenis-navigator</module>
    <module>molgenis-one-click-importer</module>
    <module>molgenis-ontology-core</module>
    <module>molgenis-ontology</module>
    <module>molgenis-platform-integration-tests</module>
    <module>molgenis-python</module>
    <module>molgenis-questionnaires</module>
    <module>molgenis-r</module>
    <module>molgenis-searchall</module>
    <module>molgenis-scripts-core</module>
    <module>molgenis-scripts</module>
    <module>molgenis-security-core</module>
    <module>molgenis-security-ui</module>
    <module>molgenis-security</module>
    <module>molgenis-semantic-mapper</module>
    <module>molgenis-semantic-search</module>
    <module>molgenis-settings</module>
    <module>molgenis-settings-ui</module>
    <module>molgenis-swagger</module>
    <module>molgenis-test</module>
    <module>molgenis-util</module>
    <module>molgenis-validation</module>
    <module>molgenis-web</module>
    <module>molgenis-i18n</module>
    <module>molgenis-beacon</module>
  </modules>
</project>
