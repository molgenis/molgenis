<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.molgenis</groupId>
        <artifactId>molgenis</artifactId>
        <version>7.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>molgenis-platform-integration-tests</artifactId>

    <name>platform-integration-tests</name>
    <description>Data layer integration test module.</description>


    <profiles>
        <!-- Profile create-it-db (active by default) creates a new postgres database and drops it after running the tests -->
        <profile>
            <id>create-it-db</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- override the it db name and create new database for the test run -->
                <maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>
                <it_db_name>molgenis_apitest_${maven.build.timestamp}</it_db_name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create postgres integration database</id>
                                <phase>pre-integration-test</phase>
                            </execution>
                            <execution>
                                <id>drop postgres integration database</id>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Profile create-it-es creates new elasticsearch instance and drops it after the test -->
        <profile>
            <id>create-it-es</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- override the cluster name for the test run -->
                <maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>
                <elasticsearch.cluster.name>apitest${maven.build.timestamp}</elasticsearch.cluster.name>
                <elasticsearch.transport.addresses>localhost:${elasticsearch.tcp.port}
                </elasticsearch.transport.addresses>
            </properties>
            <build>
                <plugins>
                    <!-- Reserve network ports -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserve-network-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Start and stop elasticsearch instance -->
                    <plugin>
                        <groupId>com.github.alexcojocaru</groupId>
                        <artifactId>elasticsearch-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-elasticsearch</id>
                                <phase>pre-integration-test</phase>
                            </execution>
                            <execution>
                                <id>stop-elasticsearch</id>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <!-- Dependency plugin extracts elasticsearch configuration resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <includeArtifactIds>molgenis-data-elasticsearch</includeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                            <overWrite>true</overWrite>
                            <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                            <includes>conf/**</includes>
                            <type>test-jar</type>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables combine.children="append">
                        <!-- These override molgenis-server.properties for the integration test -->
                        <elasticsearch.transport.addresses>${elasticsearch.transport.addresses}
                        </elasticsearch.transport.addresses>
                        <elasticsearch.cluster.name>${elasticsearch.cluster.name}</elasticsearch.cluster.name>
                        <db_uri>jdbc:postgresql://localhost/${it_db_name}</db_uri>
                        <db_user>${it_db_user}</db_user>
                        <db_password>${it_db_password}</db_password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <!-- The destination file for the code coverage report has to be set to the same value
                         in the parent pom and in each module pom. Then JaCoCo will add up information in
                         the same report, so that, it will give the cross-module code coverage. -->
                    <destFile>${project.basedir}/../target/jacoco-it.exec</destFile>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-platform</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-security</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-elasticsearch</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-postgresql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-csv</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-excel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-file</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-jobs</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-settings</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-import</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-vcf</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-ontology</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-ontology-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- third party dependencies -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <!-- test dependencies -->
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-ontology-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-data-elasticsearch</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.molgenis</groupId>
            <artifactId>molgenis-semantic-search</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
</project>